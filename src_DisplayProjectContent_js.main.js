"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkodin_todo"] = self["webpackChunkodin_todo"] || []).push([["src_DisplayProjectContent_js"],{

/***/ "./src/DisplayProjectContent.js":
/*!**************************************!*\
  !*** ./src/DisplayProjectContent.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst updateTasksContainerDisplay = (projectIndex) => {\r\n    const contentDiv = document.querySelector('main-content');\r\n    contentDiv.textContent = '';\r\n    const project = containerArray[projectIndex];\r\n    const tasksContainerDiv = document.createElement('div');\r\n    tasksContainerDiv.classList.add('tasks-container');\r\n    contentDiv.appendChild(tasksContainerDiv);\r\n\r\n    const addProjectHeader = (() => {\r\n        const projectHeaderDiv = document.createElement('div');\r\n        projectHeaderDiv.classList.add('project-header');\r\n        tasksContainerDiv.appendChild(projectHeaderDiv);\r\n        const leftHeaderDiv = document.createElement('div');\r\n        leftHeaderDiv.classList.add('left-project-header');\r\n        projectHeaderDiv.appendChild(leftHeaderDiv);\r\n        const goBackToProjectContainerIcon = document.createElement('i');\r\n        goBackToProjectContainerIcon.classList.add('material-symbols-rounded');\r\n        goBackToProjectContainerIcon.innerHTML = '&#xe5c4';\r\n        leftHeaderDiv.appendChild(goBackToProjectContainerIcon);\r\n        goBackToProjectContainerIcon.addEventListener('click',()=>updateProjectContainerDisplay());\r\n        const projectTitleDiv = document.createElement('div');\r\n        projectTitleDiv.textContent = project.getProjectName();\r\n        leftHeaderDiv.appendChild(projectTitleDiv);\r\n        const editProjectNameIcon = document.createElement('i');\r\n        editProjectNameIcon.classList.add('material-symbols-rounded');\r\n        editProjectNameIcon.innerHTML = '&#xe3c9';\r\n        leftHeaderDiv.appendChild(editProjectNameIcon);\r\n        editProjectNameIcon.addEventListener('click',() => {\r\n            editProjectNameIcon.style.pointerEvents = 'none';\r\n            projectTitleDiv.contentEditable = true;\r\n            projectTitleDiv.focus();\r\n            document.addEventListener('keydown',e => {\r\n                if (e.key === 'Enter') {\r\n                    projectTitleDiv.contentEditable = false;\r\n                    project.editProjectName(projectTitleDiv.textContent);\r\n                    editProjectNameIcon.style.pointerEvents = 'auto';\r\n                    return;\r\n                }\r\n            })\r\n            return;\r\n        })\r\n        const middleHeaderDiv = document.createElement('div');\r\n        middleHeaderDiv.classList.add('middle-project-header');\r\n        projectHeaderDiv.appendChild(middleHeaderDiv);\r\n        const addTodoButton = document.createElement('div');\r\n        middleHeaderDiv.appendChild(addTodoButton);\r\n        addTodoButton.insertAdjacentHTML('beforeend','<i class=\"material-symbols-rounded\">&#xe147</i>Add Todo');\r\n        //Add Todo Form DOM code\r\n        const addTodoPopUp = document.createElement('div');\r\n        addTodoPopUp.classList.add('add-todo-popup');\r\n        middleHeaderDiv.appendChild(addTodoPopUp);\r\n        const addTodoForm = document.createElement('form');\r\n        addTodoPopUp.appendChild(addTodoForm);\r\n        const todoTitleInput = document.createElement('input');\r\n        todoTitleInput.setAttribute('type','text');\r\n        todoTitleInput.setAttribute('placeholder','Title');\r\n        todoTitleInput.setAttribute('required','true');\r\n        addTodoForm.appendChild(todoTitleInput);\r\n        const todoDescriptionInput = document.createElement('input');\r\n        todoDescriptionInput.setAttribute('type','text');\r\n        todoDescriptionInput.setAttribute('placeholder','Description');\r\n        addTodoForm.appendChild(todoDescriptionInput);\r\n        const todoDueDateInput = document.createElement('input');\r\n        todoDueDateInput.setAttribute('type','date');\r\n        todoDueDateInput.setAttribute('max','2027-12-31');\r\n        addTodoForm.appendChild(todoDueDateInput);\r\n        addTodoForm.insertAdjacentHTML('beforeend',\"<p><input type='submit' value='Submit' /></p>\");\r\n        const addTodoFunction = (() => {\r\n            const toggleAddTodoPopUp = () => {\r\n                addTodoPopUp.classList.toggle('show');\r\n                const addTodoIcon = document.querySelector('.middle-project-header i');\r\n                const iconHex = addTodoIcon.textContent.charCodeAt(0).toString(16);\r\n                addTodoIcon.innerHTML = (iconHex === 'e5c9')?'&#xe147':'&#xe5c9';\r\n            };\r\n            addTodoButton.addEventListener('click',() => {\r\n                toggleAddTodoPopUp();\r\n                return;\r\n            })\r\n            addTodoForm.addEventListener('submit',(e) => {\r\n                e.preventDefault();\r\n                project.addTodo(todoTitleInput.value, todoDescriptionInput.value, todoDueDateInput.value);\r\n                updateTodoListDisplay();\r\n                addTodoForm.reset();\r\n                toggleAddTodoPopUp();\r\n                return;\r\n            })\r\n        })();\r\n\r\n        const addTodoIcon = document.createElement('i');\r\n        const rightHeaderDiv = document.createElement('div');\r\n        rightHeaderDiv.classList.add('right-project-header');\r\n        projectHeaderDiv.appendChild(rightHeaderDiv);\r\n        rightHeaderDiv.insertAdjacentHTML('beforeend','<i class=\"material-symbols-rounded\">&#xe16c</i>Delete this project');\r\n        rightHeaderDiv.addEventListener('dblclick',() => {\r\n            app.getContainer().removeProject(projectIndex);\r\n            updateProjectContainerDisplay();\r\n            return;\r\n        })\r\n    })();\r\n\r\n    const todoListDiv = document.createElement('div');\r\n    todoListDiv.classList.add('todo-list');\r\n    tasksContainerDiv.appendChild(todoListDiv);\r\n\r\n    const updateTodoListDisplay = () => {\r\n        todoListDiv.textContent = '';\r\n        const todoContainerArray = project.getTodoList();\r\n\r\n        todoContainerArray.forEach((todoObj,todoIndex) => {\r\n            const todoDiv = document.createElement('div');\r\n            todoDiv.classList.add('todo');\r\n            if (todoObj.isActive()) todoDiv.classList.add('active');\r\n            else todoDiv.classList.add('completed');\r\n            todoListDiv.insertAdjacentElement('afterbegin',todoDiv);\r\n            const leftDiv = document.createElement('div');\r\n            todoDiv.appendChild(leftDiv);\r\n            const tickIcon = document.createElement('i');\r\n            tickIcon.classList.add('material-symbols-rounded');\r\n            tickIcon.innerHTML = '&#xe86c';\r\n            leftDiv.appendChild(tickIcon);\r\n            //Set task to completed event\r\n            if (todoObj.isActive()) {tickIcon.addEventListener('click',() => {\r\n                project.setTodoToCompleted(todoIndex);\r\n                todoDiv.classList.remove('active');\r\n                todoDiv.classList.add('completed');\r\n                updateTodoListDisplay();\r\n                return;\r\n            })}\r\n            const todoTitleDiv = document.createElement('div');\r\n            todoTitleDiv.textContent = todoObj.getTitle();\r\n            leftDiv.appendChild(todoTitleDiv);\r\n            const rightDiv = document.createElement('div');\r\n            todoDiv.appendChild(rightDiv);\r\n            const dueDateDiv = document.createElement('div');\r\n            dueDateDiv.textContent = todoObj.getDueDate();\r\n            rightDiv.appendChild(dueDateDiv);\r\n            const deleteTodoIcon = document.createElement('i');\r\n            deleteTodoIcon.classList.add('material-symbols-rounded');\r\n            deleteTodoIcon.innerHTML = '&#xe872';\r\n            rightDiv.appendChild(deleteTodoIcon);\r\n            deleteTodoIcon.addEventListener('click',() => {\r\n                project.removeTodo(todoObj.isActive(),todoIndex);\r\n                updateTodoListDisplay();\r\n                return;\r\n            })\r\n        })\r\n    }\r\n    updateTodoListDisplay();\r\n}\r\n\r\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (updateTasksContainerDisplay);\n\n//# sourceURL=webpack://odin-todo/./src/DisplayProjectContent.js?");

/***/ })

}]);